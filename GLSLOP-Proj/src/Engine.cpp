//------------------------------------------------------------------------------
//
// File Name:	Engine.cpp
// Author(s):	Gabe Gramblicka (gabriel.gramblicka)	
//
// Copyright (c) Gabe Gramblicka
//
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Include Files:
//------------------------------------------------------------------------------

#include "stdafx.h"

#include "Engine.h"
#include "System.h"

//------------------------------------------------------------------------------
// Private Constants:
//------------------------------------------------------------------------------

static constexpr unsigned s_systemCount = 1;

//------------------------------------------------------------------------------
// Private Typedefs:
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Private Structures:
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Public Variables:
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Private Variables:
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Private Function Declarations:
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Public Functions:
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Private Functions:
//------------------------------------------------------------------------------

Engine::Engine() {
	m_systems.reserve(s_systemCount);
}

void Engine::AddSystem(System& system) {
	m_systems.push_back(&system);
}

bool Engine::Init() {
	for (System* system : m_systems) {
		if (!(system)->Init()) {
			return false;
		}
	}
	return true;
}

void Engine::Update(float dt) {
	for (System* system : m_systems) {
		system->Update(dt);
	}
}

void Engine::Render() const {
	for (System* system : m_systems) {
		system->Render();
	}
}

void Engine::Exit() {
	for (System* system : m_systems) {
		system->Exit();
	}
}
