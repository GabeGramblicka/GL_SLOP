//------------------------------------------------------------------------------
//
// File Name:	Main.cpp
// Author(s):	Gabe Gramblicka (gabriel.gramblicka)	
//
// Copyright (c) Gabe Gramblicka
//
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Include Files:
//------------------------------------------------------------------------------

#include "stdafx.h"

#include <GL\glew.h> // Must come before GL.h
#include <GL\GL.h>

#include "Engine.h"
#include "Time.h"

// Systems
#include "WindowSystem.h"
#include "UISystem.h"

//------------------------------------------------------------------------------
// Private Constants:
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Private Typedefs:
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Private Structures:
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Public Variables:
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Private Variables:
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Private Function Declarations:
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Public Functions:
//------------------------------------------------------------------------------

int main(int argc, char* argv[]) {
	Engine engine;
	// Add Systems //
	engine.AddSystem(WindowSystem::Instance());
	engine.AddSystem(UISystem    ::Instance());

	if (!engine.Init()) {
		return 1;
	}

	while (WindowSystem::s_isRunning) {
		float dt = Time::GetDelta();
		engine.Update(dt);
	}
	engine.Exit();
	return 0;
}

//------------------------------------------------------------------------------
// Private Functions:
//------------------------------------------------------------------------------